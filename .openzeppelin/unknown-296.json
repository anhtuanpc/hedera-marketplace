{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x869e4D451c2656e05Dc03E67E6831808756C0C10",
    "txHash": "0xeb511ee4666af6e09c01ea05198f73b2549739dd690a7f485e81a0b3299e5d2f"
  },
  "proxies": [
    {
      "address": "0x0aAB64e82749a7985453E63d84E350f1c5265864",
      "txHash": "0xa8e77f2c8c2bee43b7ff8a5bab1db38379b0fc77d31e18738b5bcd9c76404eb0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "eff35bf9d8d1ffac3a0f602de48be40918f30d9c095e498141669789e54229c6": {
      "address": "0xb676DC0F3C3111d0752F2AcB3ec2505935C2AB1f",
      "txHash": "0x7e692bfb7b60a2ab4aa3db000559ce09b283f37359b2d1530fa677454d1aeccf",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "payableToken",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RLFMarketplaceUpgradeable",
            "src": "contracts\\RLFMarketplaceUpgradeable.sol:50"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_address)dyn_storage",
            "contract": "RLFMarketplaceUpgradeable",
            "src": "contracts\\RLFMarketplaceUpgradeable.sol:51"
          },
          {
            "label": "listNfts",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListNFT)952_storage))",
            "contract": "RLFMarketplaceUpgradeable",
            "src": "contracts\\RLFMarketplaceUpgradeable.sol:54"
          },
          {
            "label": "offerNfts",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(OfferNFT)965_storage)))",
            "contract": "RLFMarketplaceUpgradeable",
            "src": "contracts\\RLFMarketplaceUpgradeable.sol:57"
          },
          {
            "label": "auctionNfts",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AuctionNFT)990_storage))",
            "contract": "RLFMarketplaceUpgradeable",
            "src": "contracts\\RLFMarketplaceUpgradeable.sol:61"
          },
          {
            "label": "bidPrices",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "RLFMarketplaceUpgradeable",
            "src": "contracts\\RLFMarketplaceUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(OfferNFT)965_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct RLFMarketplaceUpgradeable.OfferNFT)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AuctionNFT)990_storage))": {
            "label": "mapping(address => mapping(uint256 => struct RLFMarketplaceUpgradeable.AuctionNFT))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListNFT)952_storage))": {
            "label": "mapping(address => mapping(uint256 => struct RLFMarketplaceUpgradeable.ListNFT))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(OfferNFT)965_storage)": {
            "label": "mapping(address => struct RLFMarketplaceUpgradeable.OfferNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(OfferNFT)965_storage))": {
            "label": "mapping(uint256 => mapping(address => struct RLFMarketplaceUpgradeable.OfferNFT))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionNFT)990_storage)": {
            "label": "mapping(uint256 => struct RLFMarketplaceUpgradeable.AuctionNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ListNFT)952_storage)": {
            "label": "mapping(uint256 => struct RLFMarketplaceUpgradeable.ListNFT)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionNFT)990_storage": {
            "label": "struct RLFMarketplaceUpgradeable.AuctionNFT",
            "members": [
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "payToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "initialPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "minBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "heighestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "winner",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "success",
                "type": "t_bool",
                "offset": 20,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(ListNFT)952_storage": {
            "label": "struct RLFMarketplaceUpgradeable.ListNFT",
            "members": [
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "payToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(OfferNFT)965_storage": {
            "label": "struct RLFMarketplaceUpgradeable.OfferNFT",
            "members": [
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "offerer",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "payToken",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "offerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
